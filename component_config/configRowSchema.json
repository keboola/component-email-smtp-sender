{
  "type": "object",
  "title": "SMTP sender configuration",
  "properties": {
    "configuration_type": {
      "title": "Configuration Type",
      "type": "string",
      "enum": ["basic", "advanced"],
      "propertyOrder": 1,
      "options": {
        "enum_titles": ["Basic", "Advanced"]
      }
    },
    "basic_options": {
      "title": "Basic Options",
      "type": "object",
      "propertyOrder": 2,
      "options": {"dependencies": {"configuration_type": "basic"}},
      "properties": {
        "recipient_email_addresses": {
          "title": "Recipient Email Addresses",
          "type": "string",
          "options": {
            "tooltip": "Enter comma delimited list of recipient email addresses"
          },
          "propertyOrder": 1
        },
        "subject": {
          "propertyOrder": 2,
          "type": "string",
          "title": "Subject",
          "default": "Example subject",
          "format": "textarea",
          "options": {
            "input_height": "100px"
          }
        },
        "message_body": {
          "propertyOrder": 3,
          "type": "string",
          "title": "Message Body",
          "default": "Example message body.",
          "format": "textarea",
          "options": {
            "input_height": "100px"
          }
        },
        "include_attachments": {
          "title": "Include Attachments",
          "type": "boolean",
          "format": "checkbox",
          "description": "if checked - all tables and files in input mapping will be used as attachments",
          "default": true,
          "propertyOrder": 4
        }
      }
    },
    "advanced_options": {
      "title": "Advanced Options",
      "type": "object",
      "propertyOrder": 3,
      "options": {"dependencies": {"configuration_type": "advanced"}},
      "properties": {
        "email_data_table_name": {
          "type": "string",
          "title": "Email Data Table Name",
          "description": "name of the table with recipient email addresses, placeholders, other columns depending on your configuration",
          "items": {
            "enum": [],
            "type": "string"
          },
          "enum": [],
          "format": "select",
          "uniqueItems": true,
          "propertyOrder": 1,
          "options": {
            "async": {
              "label": "Re-load tables",
              "action": "load_input_table_selection",
              "autoload": []
            }
          }
        },
        "recipients_config": {
          "title": "Recipients Config",
          "propertyOrder": 2,
          "properties": {
            "recipients_source": {
              "title": "Recipients Source",
              "type": "string",
              "propertyOrder": 1,
              "enum": ["from_table", "from_definition"],
              "options": {
                "enum_titles": ["From Table", "From Definition"],
                "tooltip": "**From Table** - specify column which contains recipient email addresses \n\n**From Definition** - enter comma delimited list of recipient email addresses"
              }
            },
            "recipient_email_address_column": {
              "type": "string",
              "title": "Recipient Email Address Column",
              "items": {
                "enum": [],
                "type": "string"
              },
              "enum": [],
              "format": "select",
              "uniqueItems": true,
              "propertyOrder": 2,
              "options": {
                "async": {
                  "label": "Re-load columns",
                  "action": "load_input_table_columns",
                  "autoload": ["parameters.advanced_options.email_data_table_name"]
                },
                "dependencies": {"recipients_source": "from_table"}
              }
            },
            "recipient_email_addresses": {
              "title": "Recipient Email Addresses",
              "type": "string",
              "propertyOrder": 3,
              "options": {
                "dependencies": {"recipients_source": "from_definition"}
              }
            }
          }
        },
        "subject_config": {
          "title": "Subject Config",
          "type": "object",
          "propertyOrder": 3,
          "properties": {
            "subject_source": {
              "title": "Subject Source",
              "type": "string",
              "enum": ["from_table", "from_template_definition"],
              "options": {
                "enum_titles": ["From Table", "From Template Definition"],
                "tooltip": "**From Table** - specify column which contains subject template/text in Jinja2 format \n- example use case - You want to have different subject for different recipients.\n\n**From Template Definition** - paste the subject template/text into the text area field \n- example use case - You want all recipients to receive similar subject template/text"
              },
              "propertyOrder": 1
            },
            "subject_column": {
              "type": "string",
              "title": "Subject Column",
              "enum": [],
              "items": {
                "enum": [],
                "type": "string"
              },
              "format": "select",
              "uniqueItems": true,
              "propertyOrder": 2,
              "options": {
                "async": {
                  "label": "Re-load columns",
                  "action": "load_input_table_columns",
                  "autoload": ["parameters.advanced_options.email_data_table_name"]
                },
                "dependencies": {"subject_source": "from_table"}
              }
            },
            "subject_template_definition": {
              "propertyOrder": 3,
              "type": "string",
              "title": "Plaintext Subject Template",
              "default": "Example subject",
              "format": "textarea",
              "options": {
                "input_height": "100px",
                "dependencies": {"subject_source":  "from_template_definition"}
              }
            },
            "validate_subject": {
                "type": "button",
                "format": "sync-action",
                "description": "Checks, whether all placeholders in your subject template are contained in the input table",
                "propertyOrder": 7,
                "options": {
                  "async": {
                    "label": "VALIDATE SUBJECT",
                    "action": "validate_subject"
                  }
                }
              }
            }
        },
        "message_body_config": {
          "title": "Message Body Config",
          "type": "object",
          "propertyOrder": 4,
          "properties": {
            "message_body_source": {
              "title": "Message Body Source",
              "type": "string",
              "enum": ["from_table", "from_template_file", "from_template_definition"],
              "options": {
                "enum_titles": ["From Table", "From Template File", "From Template Definition"],
                "tooltip": "**From Table** - specify column which contains template in Jinja2 format \n- example use case - You want to have different template/message for different recipients.\n\n**From Template File** - specify input file name containing the template in Jinja2 format \n- example use case - you want each recipient to receive similar template (with differently filled placeholders), and have an orchestration which spawns this template, so that this configuration has the template updated automatically\n\n**From Template Definition** - paste the template text into the text area field \n- example use case - You want all recipients to receive similar template and it will not be changed often."
              },
              "propertyOrder": 1
            },
            "use_html_template": {
              "type": "boolean",
              "format": "checkbox",
              "title": "Use HTML Template",
              "description": "HTML version is the primary displayed message, if recipients inbox doesn't support HTML, the message defaults to the plaintext version",
              "default": true,
              "propertyOrder": 7
            },
            "plaintext_template_column": {
              "type": "string",
              "title": "Plaintext Message Template Column",
              "enum": [],
              "items": {
                "enum": [],
                "type": "string"
              },
              "format": "select",
              "uniqueItems": true,
              "propertyOrder": 2,
              "options": {
                "async": {
                  "label": "Re-load columns",
                  "action": "load_input_table_columns",
                  "autoload": ["parameters.advanced_options.email_data_table_name"]
                },
                "dependencies": {"message_body_source": "from_table"}
              }
            },
            "html_template_column": {
              "type": "string",
              "title": "HTML Message Template Column",
              "enum": [],
              "items": {
                "enum": [],
                "type": "string"
              },
              "format": "select",
              "uniqueItems": true,
              "propertyOrder": 8,
              "options": {
                "async": {
                  "label": "Re-load columns",
                  "action": "load_input_table_columns",
                  "autoload": ["parameters.advanced_options.email_data_table_name"]
                },
                "dependencies": {
                  "use_html_template": true,
                  "message_body_source": "from_table"
                }
              }
            },
            "plaintext_template_filename": {
              "type": "string",
              "title": "Plaintext Template Filename",
              "default": "template.txt",
              "propertyOrder": 4,
              "options": {
                "dependencies": {"message_body_source": "from_template_file"}
              }
            },
            "html_template_filename": {
              "type": "string",
              "title": "HTML Template Filename",
              "default": "template.html",
              "propertyOrder": 8,
              "options": {
                "dependencies": {
                  "use_html_template": true,
                  "message_body_source": "from_template_file"}
              }
            },
            "plaintext_template_definition": {
              "propertyOrder": 6,
              "type": "string",
              "title": "Plaintext Message Body Template",
              "default": "Example message body.",
              "format": "textarea",
              "options": {
                "input_height": "100px",
                "dependencies": {"message_body_source": "from_template_definition"}
              }
            },
            "validate_plaintext_template": {
              "type": "button",
              "format": "sync-action",
              "description": "Checks, whether all placeholders in your plaintext template are contained in the input table",
              "propertyOrder": 7,
              "options": {
                "async": {
                  "label": "VALIDATE PLAINTEXT TEMPLATE",
                  "action": "validate_plaintext_template"
                }
              }
            },
            "html_template_definition": {
              "propertyOrder": 8,
              "type": "string",
              "title": "HTML Message Body Template",
              "format": "textarea",
              "default": "<h3>Example message body title</h3><p>Example message body paragraph.</p>",
              "options": {
                "input_height": "100px",
                "dependencies": {
                  "use_html_template": true,
                  "message_body_source": "from_template_definition"}
              }
            },
            "validate_html_template": {
              "type": "button",
              "format": "sync-action",
              "description": "Checks, whether all placeholders in your plaintext template are contained in the input table",
              "propertyOrder": 9,
              "options": {
                "async": {
                  "label": "VALIDATE HTML TEMPLATE",
                  "action": "validate_html_template"
                },
                "dependencies": {
                  "use_html_template": true
                }
              }
            }
          }
        },
        "attachments_config": {
          "title": "Attachments Config",
          "type": "object",
          "propertyOrder": 5,
          "properties": {
            "attachments_source": {
              "title": "Attachments Source",
              "type": "string",
              "propertyOrder": 1,
              "enum": ["from_table", "all_input_files"],
              "options": {
                "enum_titles": ["From Table", "All Input Files"],
                "tooltip": "**From Table** - column expects json list of attachment filenames in input mapping, associated with specific recipients \n- example use case - you want to have control over who receives what - everybody could receive newsletter associated pdf, but certain recipients are eligible for a special offer included in this newsletter\n\n**All Input Files** - all recipients will receive all non-template files in the input mapping"
              }
            },
            "attachments_column": {
              "type": "string",
              "title": "Attachments Column",
              "enum": [],
              "description": "column expects json list of attachment filenames in input mapping, associated with specific recipients",
              "items": {
                "enum": [],
                "type": "string"
              },
              "format": "select",
              "uniqueItems": true,
              "propertyOrder": 2,
              "options": {
                "async": {
                  "label": "Re-load columns",
                  "action": "load_input_table_columns",
                  "autoload": ["parameters.advanced_options.email_data_table_name"]
                },
                "dependencies": {"attachments_source":  "from_table"}
              }
            },
            "validate_attachments": {
              "type": "button",
              "format": "sync-action",
              "description": "Validates All attachments are present in file input mapping (excluding the template files)",
              "propertyOrder": 3,
              "options": {
                "async": {
                  "label": "VALIDATE ATTACHMENTS",
                  "action": "validate_attachments"
                },
                "dependencies": {"attachments_source":  "from_table"}
              }
            }
          }
        },
        "validate_config": {
          "type": "button",
          "format": "sync-action",
          "description": "Validates the whole config",
          "propertyOrder": 8,
          "options": {
            "async": {
              "label": "VALIDATE CONFIG",
              "action": "validate_config"
            }
          }
        }
      }
    },
    "dry_run": {
      "type": "boolean",
      "format": "checkbox",
      "title": "Dry run",
      "description": "if checked - only builds emails, but doesn't send them (it's useful because it will output results table containing what would be sent)",
      "default": false,
      "propertyOrder": 6
    },
    "continue_on_error": {
      "type": "boolean",
      "format": "checkbox",
      "title": "Continue On Error",
      "description": "if checked - component doesn't crash on invalid emails, but tries to send the rest of them",
      "default": true,
      "propertyOrder": 7
    }
  }
}